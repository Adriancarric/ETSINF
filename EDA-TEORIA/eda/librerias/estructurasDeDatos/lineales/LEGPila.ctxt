#BlueJ class context
comment0.params=
comment0.target=LEGPila()
comment0.text=crea\ una\ Pila\ vacia
comment1.params=e
comment1.target=void\ apilar(java.lang.Object)
comment1.text=inserta\ el\ Elemento\ e\ en\ una\ Pila,\ o\ lo\ situa\ en\ su\ tope
comment2.params=
comment2.target=java.lang.Object\ desapilar()
comment2.text=\ SII\ \!esVacia()\ \ndevuelve\ y\ elimina\ de\ una\ Pila\ el\ Elemento\ que\ ocupa\ su\ tope
comment3.params=
comment3.target=java.lang.Object\ tope()
comment3.text=\ SII\ \!esVacia()\ndevuelve\ el\ Elemento\ que\ ocupa\ el\ tope\ de\ una\ Pila
comment4.params=
comment4.target=boolean\ esVacia()
comment4.text=comprueba\ si\ una\ Pila\ esta\ vacia
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\ devuelve\ un\ String\ con\ los\ datos\ de\ una\ Pila\ en\ orden\ LIFO,\ inverso\ \n\ \ al\ de\ insercion,\ y\ con\ el\ formato\ que\ se\ usa\ en\ el\ estandar\ de\ Java\n\ \ Por\ ejemplo,\ si\ se\ tiene\ una\ Pila\ con\ los\ Integer\ del\ 1\ al\ 4,\ en\n\ \ orden\ LIFO,\ toString\ devuelve\ [4,\ 3,\ 2,\ 1];\n\ \ si\ la\ Pila\ esta\ vacia,\ entonces\ devuelve\ []\ \n
numComments=6
